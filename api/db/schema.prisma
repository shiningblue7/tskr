datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = "native"
}

// Define your own datamodels here and run `yarn redwood prisma migrate dev`
// to create migrations for them and apply to your dev DB.

model User {
  id             Int           @id @default(autoincrement())
  createdAt      DateTime      @default(now())
  updatedAt      DateTime      @updatedAt
  email          String        @unique
  name           String        @default("")
  hashedPassword String        @default("")
  salt           String        @default("")
  AssignedTask   Task[]        @relation("assignedTo")
  GroupMember    GroupMember[]
  TaskNote       TaskNote[]
  CreatedTask    Task[]        @relation("createdBy")
}

model Task {
  id                Int        @id @default(autoincrement())
  createdAt         DateTime   @default(now())
  createdBy         User       @relation("createdBy", fields: [createdById], references: [id])
  createdById       Int
  updatedAt         DateTime   @updatedAt
  title             String
  state             String     @default("new")
  assignedTo        User?      @relation("assignedTo", fields: [assignedToId], references: [id])
  assignedToId      Int?
  TaskNote          TaskNote[]
  assignmentGroup   Group?     @relation(fields: [assignmentGroupId], references: [id])
  assignmentGroupId Int?
}

model TaskNote {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  note      String
  task      Task     @relation(fields: [taskId], references: [id])
  taskId    Int
  User      User     @relation(fields: [userId], references: [id])
  userId    Int
}

model Group {
  id          Int           @id @default(autoincrement())
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  name        String
  description String
  Task        Task[]
  GroupMember GroupMember[]
}

model GroupMember {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  userId    Int
  group     Group    @relation(fields: [groupId], references: [id])
  groupId   Int
}
